姓名 《 输入（“你叫什么名字？”）
如果 姓名 = “我不知道”
     输出（“你怎么不知道你的名字？“）
否则
     输出（”你好“+姓名）
结束分支































斐波那契数列 《 []
指 《 0
斐波那契数号 《 1
以前来的数号 《 1
当 斐波那契数号 小于 1000
     斐波那契数列[指] 《 斐波那契数号
     暂时价值 《 斐波那契数号
     斐波那契数号 《 斐波那契数号 + 以前来的数号
     以前来的数号 《 暂时价值
     指 《 指 + 1
结束循环
输出（斐波那契数号）

函数 算斐波那契数列 要 斐波那契数号、以前来的数号
     如果 斐波那契数号 小于 1000
          输出（斐波那契数号）
          算斐波那契数列（斐波那契数号+以前来的数号、斐波那契数号）
     否则
          返回
     结束分支
结束函数

算斐波那契数列（1、1）

    <h3>VII. Functions and Recursion</h3>
    The Fibonacci sequence can also be calculated recursively.  Since any given Fibonacci number depends on the previous two numbers in the list, we can write a recursive function that will calculate Fibonnacci numbers.  In this language, a function is defined between the 函数 and 结束函数 commands.  It will not be run unless it is called during execution of the script.  In the example below we use 算斐波那契数列() to call the function, which we defined at the end of the script.  To exit a function you can use the 返回 command.<pre>
